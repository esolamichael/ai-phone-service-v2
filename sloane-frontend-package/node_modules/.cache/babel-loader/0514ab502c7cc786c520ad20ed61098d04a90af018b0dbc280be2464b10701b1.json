{"ast":null,"code":"import api from'./index';const callsApi={// Get call history\ngetCallHistory:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/calls/history',{params});return response.data;}catch(error){throw error;}},// Get call details\ngetCallDetails:async callId=>{try{const response=await api.get(`/calls/${callId}`);return response.data;}catch(error){throw error;}},// Get call analytics\ngetCallAnalytics:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/calls/analytics',{params});return response.data;}catch(error){throw error;}},// Update call notes\nupdateCallNotes:async(callId,notes)=>{try{const response=await api.put(`/calls/${callId}/notes`,{notes});return response.data;}catch(error){throw error;}},// Mark call as handled\nmarkCallAsHandled:async callId=>{try{const response=await api.put(`/calls/${callId}/handled`);return response.data;}catch(error){throw error;}},// Export call history\nexportCallHistory:async function(format){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.get(`/calls/export/${format}`,{params,responseType:'blob'});return response.data;}catch(error){throw error;}}};export default callsApi;","map":{"version":3,"names":["api","callsApi","getCallHistory","params","arguments","length","undefined","response","get","data","error","getCallDetails","callId","getCallAnalytics","updateCallNotes","notes","put","markCallAsHandled","exportCallHistory","format","responseType"],"sources":["/Users/Mike/Documents/ai-phone-service-codebase-v2/sloane-frontend-package/src/api/calls.js"],"sourcesContent":["import api from './index';\n\nconst callsApi = {\n  // Get call history\n  getCallHistory: async (params = {}) => {\n    try {\n      const response = await api.get('/calls/history', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Get call details\n  getCallDetails: async (callId) => {\n    try {\n      const response = await api.get(`/calls/${callId}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Get call analytics\n  getCallAnalytics: async (params = {}) => {\n    try {\n      const response = await api.get('/calls/analytics', { params });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Update call notes\n  updateCallNotes: async (callId, notes) => {\n    try {\n      const response = await api.put(`/calls/${callId}/notes`, { notes });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Mark call as handled\n  markCallAsHandled: async (callId) => {\n    try {\n      const response = await api.put(`/calls/${callId}/handled`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Export call history\n  exportCallHistory: async (format, params = {}) => {\n    try {\n      const response = await api.get(`/calls/export/${format}`, { \n        params,\n        responseType: 'blob'\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\nexport default callsApi;\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,SAAS,CAEzB,KAAM,CAAAC,QAAQ,CAAG,CACf;AACAC,cAAc,CAAE,cAAAA,CAAA,CAAuB,IAAhB,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAChC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,gBAAgB,CAAE,CAAEL,MAAO,CAAC,CAAC,CAC5D,MAAO,CAAAI,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAC,cAAc,CAAE,KAAO,CAAAC,MAAM,EAAK,CAChC,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,UAAUI,MAAM,EAAE,CAAC,CAClD,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAG,gBAAgB,CAAE,cAAAA,CAAA,CAAuB,IAAhB,CAAAV,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAClC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,kBAAkB,CAAE,CAAEL,MAAO,CAAC,CAAC,CAC9D,MAAO,CAAAI,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAI,eAAe,CAAE,KAAAA,CAAOF,MAAM,CAAEG,KAAK,GAAK,CACxC,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACgB,GAAG,CAAC,UAAUJ,MAAM,QAAQ,CAAE,CAAEG,KAAM,CAAC,CAAC,CACnE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAO,iBAAiB,CAAE,KAAO,CAAAL,MAAM,EAAK,CACnC,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACgB,GAAG,CAAC,UAAUJ,MAAM,UAAU,CAAC,CAC1D,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAQ,iBAAiB,CAAE,cAAAA,CAAOC,MAAM,CAAkB,IAAhB,CAAAhB,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3C,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,iBAAiBW,MAAM,EAAE,CAAE,CACxDhB,MAAM,CACNiB,YAAY,CAAE,MAChB,CAAC,CAAC,CACF,MAAO,CAAAb,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED,cAAe,CAAAT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}