{"ast":null,"code":"// src/api/auth.js\nimport api from'./index';const authApi={// Login user\nlogin:async(email,password)=>{try{const response=await api.post('/auth/login',{email,password});return response.data;}catch(error){throw error;}},// Register new user\nsignup:async userData=>{console.log('Signup API call with data:',userData);try{const response=await api.post('/auth/register',userData);console.log('Signup API response:',response.data);return response.data;}catch(error){console.error('Signup API error:',error);throw error;}},// Logout user\nlogout:async()=>{try{await api.post('/auth/logout');return true;}catch(error){throw error;}},// Get current user data\ngetCurrentUser:async()=>{try{const response=await api.get('/auth/me');return response.data;}catch(error){throw error;}},// Send password reset email\nforgotPassword:async email=>{try{const response=await api.post('/auth/forgot-password',{email});return response.data;}catch(error){throw error;}},// Reset password with token\nresetPassword:async(token,password)=>{try{const response=await api.post('/auth/reset-password',{token,password});return response.data;}catch(error){throw error;}},// Refresh token\nrefreshToken:async()=>{try{const refreshToken=localStorage.getItem('refreshToken');const response=await api.post('/auth/refresh-token',{refreshToken});return response.data;}catch(error){throw error;}},// Verify email with token\nverifyEmail:async token=>{try{const response=await api.post('/auth/verify-email',{token});return response.data;}catch(error){throw error;}}};export default authApi;","map":{"version":3,"names":["api","authApi","login","email","password","response","post","data","error","signup","userData","console","log","logout","getCurrentUser","get","forgotPassword","resetPassword","token","refreshToken","localStorage","getItem","verifyEmail"],"sources":["/Users/Mike/Documents/ai-phone-service-codebase-v2/sloane-frontend-package/src/api/auth.js"],"sourcesContent":["// src/api/auth.js\nimport api from './index';\n\nconst authApi = {\n  // Login user\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Register new user\n  signup: async (userData) => {\n    console.log('Signup API call with data:', userData);\n    try {\n      const response = await api.post('/auth/register', userData);\n      console.log('Signup API response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Signup API error:', error);\n      throw error;\n    }\n  },\n\n  // Logout user\n  logout: async () => {\n    try {\n      await api.post('/auth/logout');\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Get current user data\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Send password reset email\n  forgotPassword: async (email) => {\n    try {\n      const response = await api.post('/auth/forgot-password', { email });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Reset password with token\n  resetPassword: async (token, password) => {\n    try {\n      const response = await api.post('/auth/reset-password', { token, password });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  \n  // Refresh token\n  refreshToken: async () => {\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const response = await api.post('/auth/refresh-token', { refreshToken });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Verify email with token\n  verifyEmail: async (token) => {\n    try {\n      const response = await api.post('/auth/verify-email', { token });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\nexport default authApi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}